// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init


generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
id Int @id @default(autoincrement())
email String @unique
password String
firstName String?
lastName String?
profiles Profile[]
posts Post[]
contacts Contact[]
orders Order[]
createdAt DateTime @default(now())
updatedAt DateTime @updatedAt
}

model Profile {
id Int @id @default(autoincrement())
bio String?
avatar String?
userId Int
user User @relation(fields: [userId], references: [id])
createdAt DateTime @default(now())
updatedAt DateTime @updatedAt
}

model Post {
id Int @id @default(autoincrement())
title String
content String
userId Int
user User @relation(fields: [userId], references: [id])
createdAt DateTime @default(now())
updatedAt DateTime @updatedAt
}

model Contact {
id Int @id @default(autoincrement())
firstName String
lastName String
email String
subject String
message String
userId Int?
user User? @relation(fields: [userId], references: [id])
createdAt DateTime @default(now())
}

model Product {
id Int @id @default(autoincrement())
name String
description String
price Float
type String
createdAt DateTime @default(now())
updatedAt DateTime @updatedAt
orderItems OrderItem[]
}

model Order {
id Int @id @default(autoincrement())
total Float
status String
userId Int
user User @relation(fields: [userId], references: [id])
orderItems OrderItem[]
createdAt DateTime @default(now())
updatedAt DateTime @updatedAt
}

model OrderItem {
id Int @id @default(autoincrement())
quantity Int
price Float
orderId Int
order Order @relation(fields: [orderId], references: [id])
productId Int
product Product @relation(fields: [productId], references: [id])
createdAt DateTime @default(now())
updatedAt DateTime @updatedAt
}